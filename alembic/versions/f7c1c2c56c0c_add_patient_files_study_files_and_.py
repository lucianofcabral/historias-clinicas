"""add patient_files, study_files and consultation_files tables

Revision ID: f7c1c2c56c0c
Revises: 86f029a95caf
Create Date: 2025-10-18 23:08:11.324220

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'f7c1c2c56c0c'
down_revision: Union[str, None] = '86f029a95caf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('patient_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('file_category', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('file_path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('file_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('file_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_patient_files_file_category'), 'patient_files', ['file_category'], unique=False)
    op.create_index(op.f('ix_patient_files_file_path'), 'patient_files', ['file_path'], unique=False)
    op.create_index(op.f('ix_patient_files_patient_id'), 'patient_files', ['patient_id'], unique=False)
    op.create_table('consultation_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('consultation_id', sa.Integer(), nullable=False),
    sa.Column('file_path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('file_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('file_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['consultation_id'], ['consultations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_consultation_files_consultation_id'), 'consultation_files', ['consultation_id'], unique=False)
    op.create_index(op.f('ix_consultation_files_file_path'), 'consultation_files', ['file_path'], unique=False)
    op.create_table('study_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('study_id', sa.Integer(), nullable=False),
    sa.Column('file_path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('file_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('file_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['study_id'], ['medical_studies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_study_files_file_path'), 'study_files', ['file_path'], unique=False)
    op.create_index(op.f('ix_study_files_study_id'), 'study_files', ['study_id'], unique=False)
    # ### end Alembic commands ###
    
    # Migración de datos existentes de medical_studies a study_files
    connection = op.get_bind()
    
    # Insertar archivos existentes en study_files
    connection.execute(sa.text("""
        INSERT INTO study_files (study_id, file_path, file_name, file_type, file_size, uploaded_at)
        SELECT 
            id as study_id,
            file_path,
            file_name,
            file_type,
            file_size,
            created_at as uploaded_at
        FROM medical_studies
        WHERE file_path IS NOT NULL 
          AND file_name IS NOT NULL
    """))
    
    print(f"✓ Datos migrados de medical_studies a study_files")


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_study_files_study_id'), table_name='study_files')
    op.drop_index(op.f('ix_study_files_file_path'), table_name='study_files')
    op.drop_table('study_files')
    op.drop_index(op.f('ix_consultation_files_file_path'), table_name='consultation_files')
    op.drop_index(op.f('ix_consultation_files_consultation_id'), table_name='consultation_files')
    op.drop_table('consultation_files')
    op.drop_index(op.f('ix_patient_files_patient_id'), table_name='patient_files')
    op.drop_index(op.f('ix_patient_files_file_path'), table_name='patient_files')
    op.drop_index(op.f('ix_patient_files_file_category'), table_name='patient_files')
    op.drop_table('patient_files')
    # ### end Alembic commands ###
